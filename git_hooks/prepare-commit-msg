#!/bin/sh

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

# Set the color variables
yellow='\033[33m'
reset='\033[0m'

branch_name=`git rev-parse --abbrev-ref HEAD`
commit_msg=$(cat $1)

# Check commit message starts with one of the following words
regex_commit_start='^(feat|feature|refactor|fix|docs): .*'
if [[ ! $commit_msg =~ $regex_commit_start ]]; then
  echo "${yellow}pre-commit:${reset} Your commit message must start with some of these 'feature:' 'refactor:' 'fix:' 'docs:'${reset}"
  exit 1
fi

# Check commit message ends with one of the following words
# If not add issue number end of commit message from branch name
regex_commit_end='^.*\(AMT-[0-9]+\)$'
if [[ ! $commit_msg =~ $regex_commit_end ]]; then
    # Extract the Jira issue key from the branch name
    issue=$(echo "$branch_name" | awk -F/ '{print $2}')
    echo $issue
        # Append the issue key to the commit message
    if [ -n "$issue" ]; then
    echo "$commit_msg($issue)" > $1
    else
        echo "${yellow}pre-commit:${reset} Your commit message must end with issue number in paranteses for ex. 'feat: example commit (AMT-333)''${reset}"
        exit 1
    fi
fi
